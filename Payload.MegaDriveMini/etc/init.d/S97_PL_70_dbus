#!/bin/sh
### BEGIN INIT INFO
# Provides:          dbus
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:
# Short-Description: D-Bus systemwide message bus
# Description:       D-Bus is a simple interprocess messaging system, used
#                    for sending messages between applications.
### END INIT INFO
# -*- coding: utf-8 -*-
# Debian init.d script for D-BUS
# Copyright © 2003 Colin Walters <walters@debian.org>
# Copyright © 2005 Sjoerd Simons <sjoerd@debian.org>
# Modified for Project Lunar 2019 <contact@modmyclassic.com>
###############################################################################
# Project Lunar - DBUS Service
# ModMyClassic.com / https://discordapp.com/invite/8gygsrw
###############################################################################

set -e

DAEMON=/opt/project_lunar/bin/dbus-daemon
UUIDGEN=/opt/project_lunar/bin/dbus-uuidgen
UUIDGEN_OPTS=--ensure
NAME=dbus
DAEMONUSER=messagebus
PIDDIR=/var/run/dbus
PIDFILE=$PIDDIR/pid
DESC="System Message Bus"

test -x $DAEMON || exit 0

#. /lib/lsb/init-functions

# Source defaults file; edit that file to configure this script.
PARAMS=""
if [ -e /etc/default/dbus ]; then
  . /etc/default/dbus
fi

create_machineid() {
  # Create machine-id file
  if [ -x $UUIDGEN ]; then
    $UUIDGEN $UUIDGEN_OPTS
  fi
}

start()
{
  if [ -z "$(cat /etc/passwd | grep ${DAEMONUSER})" ]; then
    echo "[PROJECT LUNAR](DBUS) Creating user: ${DAEMONUSER}"
    [ "$(mount | head -n2 | tail -n1 | awk -F \( '{ print $2 }' | cut -c -2)" = "ro" ] && mount -o remount,rw "/" && RW_CHANGE=1
    adduser -S -D -H "${DAEMONUSER}" || return 
    [ ! -z ${RW_CHANGE} ] && [ "$(mount | head -n2 | tail -n1 | awk -F \( '{ print $2 }' | cut -c -2)" = "rw" ] && mount -o remount,ro "/"
  fi
  if [ ! -d $PIDDIR ]; then
    mkdir -p $PIDDIR
    chown $DAEMONUSER $PIDDIR
    chgrp $DAEMONUSER $PIDDIR
  fi

  if ! mountpoint -q /proc/ ; then
    echo "[PROJECT LUNAR](DBUS) Can't start $DESC - /proc is not mounted"
    return
  fi

  if [ -e $PIDFILE ]; then
    if $0 status > /dev/null ; then
      echo "[PROJECT LUNAR](DBUS) $DESC already started; not starting."
      return
    else
      echo "[PROJECT LUNAR](DBUS) Removing stale PID file $PIDFILE."
      rm -f $PIDFILE
    fi
  fi

  [ -f "/var/run/messagebus.pid" ] && echo "[PROJECT LUNAR](DBUS) Clearing down old messagebus.pid..." && rm "/var/run/messagebus.pid"

  create_machineid

  echo "[PROJECT LUNAR](DBUS) Starting $DESC: $NAME"
  start-stop-daemon --start --quiet --pidfile $PIDFILE \
    --user $DAEMONUSER --exec $DAEMON -- --system $PARAMS && echo "OK" || echo "FAIL"
}

stop()
{
  echo "[PROJECT LUNAR](DBUS) Stopping $DESC: $NAME"
  start-stop-daemon --stop --retry 5 --quiet --oknodo --pidfile $PIDFILE \
    --user $DAEMONUSER && echo "OK" || echo "FAIL"
  # We no longer include these arguments so that start-stop-daemon
  # can do its job even given that we may have been upgraded.
  # We rely on the pidfile being sanely managed
  # --exec $DAEMON -- --system $PARAMS
  rm -f $PIDFILE
}

restart()
{
  echo
  echo "[PROJECT LUNAR](DBUS) Reloading $DESC config"
  dbus-send --print-reply --system --type=method_call \
            --dest=org.freedesktop.DBus \
            / org.freedesktop.DBus.ReloadConfig > /dev/null
  # hopefully this is enough time for dbus to reload it's config file.
  [ "${?}" = "0" ] && echo "OK" || echo "FAIL" 
}

case "$1" in
	start)
		start >> /tmp/project_lunar.log
		;;
	stop)
		stop
		;;
	restart|reload)
		restart
		;;
	*)
		echo "Usage: $0 {start|stop|restart}"
		exit 1
esac

exit $?
